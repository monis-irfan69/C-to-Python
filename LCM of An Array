// C++ Code //

#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
int gcd(int a, int b)
{
	if (b == 0)
		return a;
	return gcd(b, a % b);
}
ll findlcm(int arr[], int n)
{
	ll ans = arr[0];
	for (int i = 1; i < n; i++)
		ans = (((arr[i] * ans)) /
				(gcd(arr[i], ans)));

	return ans;
}

int main()
{
	int arr[] = { 2, 7, 3, 9, 4 };
	int n = sizeof(arr) / sizeof(arr[0]);
	printf("%lld", findlcm(arr, n));
	return 0;
}

// End // 


//Python Code //

def find_lcm(num1, num2):
	if(num1>num2):
		num = num1
		den = num2
	else:
		num = num2
		den = num1
	rem = num % den
	while(rem != 0):
		num = den
		den = rem
		rem = num % den
	gcd = den
	lcm = int(int(num1 * num2)/int(gcd))
	return lcm
	
l = [2, 7, 3, 9, 4]

num1 = l[0]
num2 = l[1]
lcm = find_lcm(num1, num2)

for i in range(2, len(l)):
	lcm = find_lcm(lcm, l[i])
	
print(lcm)

