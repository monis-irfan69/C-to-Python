// C++ Selection Sort

#include <bits/stdc++.h>
using namespace std;

void swap(int *xp, int *yp)
{
	int temp = *xp;
	*xp = *yp;
	*yp = temp;
}

void selectionSort(int arr[], int n)
{
	int i, j, min_idx;
	for (i = 0; i < n-1; i++)
	{
		// Find the minimum element in unsorted array
		min_idx = i;
		for (j = i+1; j < n; j++)
		if (arr[j] < arr[min_idx])
			min_idx = j;
		swap(&arr[min_idx], &arr[i]);
	}
}

void printArray(int arr[], int size)
{
	int i;
	for (i=0; i < size; i++)
		cout << arr[i] << " ";
	cout << endl;
}

int main()
{
	int arr[] = {64, 25, 12, 22, 11};	
	


// Python Selection Sort //



import sys
A = [64, 25, 12, 22, 11]

for i in range(len(A)):
	min_idx = i
	
	for j in range(i+1, len(A)):
	
		if A[min_idx] > A[j]:
		
        min_idx = j
	
	A[i], A[min_idx] = A[min_idx], A[i]

       print ("Sorted array")

for i in range(len(A)):

	print("%d" %A[i],end=" ")


	int n = sizeof(arr)/sizeof(arr[0]);
	selectionSort(arr, n);
	cout << "Sorted array: \n";
	printArray(arr, n);
	return 0;
}

